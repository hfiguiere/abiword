./af/ev/beos/ev_BeOSMouse.cpp-145-	case EV_EEMR_INCOMPLETE:
./af/ev/beos/ev_BeOSMouse.cpp-146-		// I'm not sure this makes any sense, but we allow it.
./af/ev/beos/ev_BeOSMouse.cpp-147-		return;
./af/ev/beos/ev_BeOSMouse.cpp-148-	case EV_EEMR_BOGUS_START:
./af/ev/beos/ev_BeOSMouse.cpp-149-	case EV_EEMR_BOGUS_CONT:
./af/ev/beos/ev_BeOSMouse.cpp:150:		// TODO What to do ?? Should we beep at them or just be quiet ??
./af/ev/beos/ev_BeOSMouse.cpp-151-		return;
./af/ev/beos/ev_BeOSMouse.cpp-152-	default:
./af/ev/beos/ev_BeOSMouse.cpp-153-		UT_ASSERT(0);
./af/ev/beos/ev_BeOSMouse.cpp-154-		return;
./af/ev/beos/ev_BeOSMouse.cpp-155-	}
./af/ev/beos/ev_BeOSMouse.cpp-219-	case EV_EEMR_INCOMPLETE:
./af/ev/beos/ev_BeOSMouse.cpp-220-		// I'm not sure this makes any sense, but we allow it.
./af/ev/beos/ev_BeOSMouse.cpp-221-		return;
./af/ev/beos/ev_BeOSMouse.cpp-222-	case EV_EEMR_BOGUS_START:
./af/ev/beos/ev_BeOSMouse.cpp-223-	case EV_EEMR_BOGUS_CONT:
./af/ev/beos/ev_BeOSMouse.cpp:224:		// TODO What to do ?? Should we beep at them or just be quiet ??
./af/ev/beos/ev_BeOSMouse.cpp-225-		return;
./af/ev/beos/ev_BeOSMouse.cpp-226-	default:
./af/ev/beos/ev_BeOSMouse.cpp-227-		UT_ASSERT(0);
./af/ev/beos/ev_BeOSMouse.cpp-228-		return;
./af/ev/beos/ev_BeOSMouse.cpp-229-	}
./af/ev/beos/ev_BeOSMouse.cpp-298-	case EV_EEMR_INCOMPLETE:
./af/ev/beos/ev_BeOSMouse.cpp-299-		// I'm not sure this makes any sense, but we allow it.
./af/ev/beos/ev_BeOSMouse.cpp-300-		return;
./af/ev/beos/ev_BeOSMouse.cpp-301-	case EV_EEMR_BOGUS_START:
./af/ev/beos/ev_BeOSMouse.cpp-302-	case EV_EEMR_BOGUS_CONT:
./af/ev/beos/ev_BeOSMouse.cpp:303:		// TODO What to do ?? Should we beep at them or just be quiet ??
./af/ev/beos/ev_BeOSMouse.cpp-304-		return;
./af/ev/beos/ev_BeOSMouse.cpp-305-	default:
./af/ev/beos/ev_BeOSMouse.cpp-306-		UT_ASSERT(UT_SHOULD_NOT_HAPPEN);
./af/ev/beos/ev_BeOSMouse.cpp-307-		return;
./af/ev/beos/ev_BeOSMouse.cpp-308-	}
./af/gr/beos/gr_BeOSGraphics.cpp-241-	tempdelta.space=0.0;
./af/gr/beos/gr_BeOSGraphics.cpp-242-	tempdelta.nonspace=0.0;
./af/gr/beos/gr_BeOSGraphics.cpp-243-	float fontsize=viewFont.Size();
./af/gr/beos/gr_BeOSGraphics.cpp-244-	viewFont.GetEscapements(buffer,iLength,&tempdelta,escapementArray);
./af/gr/beos/gr_BeOSGraphics.cpp-245-
./af/gr/beos/gr_BeOSGraphics.cpp:246:	// TODO: need remapGlyph() before the following function call?
./af/gr/beos/gr_BeOSGraphics.cpp-247-	m_pShadowView->DrawString(UT_encodeUTF8char(pChars[0+iCharOffset]),
./af/gr/beos/gr_BeOSGraphics.cpp-248-							  BPoint(xoff,yoff+offset));
./af/gr/beos/gr_BeOSGraphics.cpp-249-								  
./af/gr/beos/gr_BeOSGraphics.cpp-250-	for (i=1; i<iLength; i++)
./af/gr/beos/gr_BeOSGraphics.cpp-251-	{
./af/gr/beos/gr_BeOSGraphics.cpp-520-
./af/gr/beos/gr_BeOSGraphics.cpp-521-	for (i=0; i<num; i++) {
./af/gr/beos/gr_BeOSGraphics.cpp-522-		char * utf8char;
./af/gr/beos/gr_BeOSGraphics.cpp-523-		UT_UCSChar *currentChar;
./af/gr/beos/gr_BeOSGraphics.cpp-524-		currentChar = s[i+Offset];
./af/gr/beos/gr_BeOSGraphics.cpp:525:		// TODO: next line might be performance hit
./af/gr/beos/gr_BeOSGraphics.cpp-526-		currentChar = remapGlyph(currentChar, UT_FALSE);
./af/gr/beos/gr_BeOSGraphics.cpp-527-		utf8char =  UT_encodeUTF8char(currentChar);
./af/gr/beos/gr_BeOSGraphics.cpp-528-		strcat(buffer, utf8char);						
./af/gr/beos/gr_BeOSGraphics.cpp-529-	}
./af/gr/beos/gr_BeOSGraphics.cpp-530-
./af/gr/beos/gr_BeOSGraphics.cpp-897-	UPDATE_VIEW
./af/gr/beos/gr_BeOSGraphics.cpp-898-}
./af/gr/beos/gr_BeOSGraphics.cpp-899-
./af/gr/beos/gr_BeOSGraphics.cpp-900-void GR_BeOSGraphics::setColorSpace(GR_Graphics::ColorSpace c)
./af/gr/beos/gr_BeOSGraphics.cpp-901-{
./af/gr/beos/gr_BeOSGraphics.cpp:902:	// TODO:  maybe? 
./af/gr/beos/gr_BeOSGraphics.cpp-903-	//UT_ASSERT(UT_SHOULD_NOT_HAPPEN);
./af/gr/beos/gr_BeOSGraphics.cpp-904-}
./af/gr/beos/gr_BeOSGraphics.cpp-905-
./af/gr/beos/gr_BeOSGraphics.cpp-906-GR_Graphics::ColorSpace GR_BeOSGraphics::getColorSpace(void) const
./af/gr/beos/gr_BeOSGraphics.cpp-907-{
./af/gr/beos/gr_BeOSGraphics.cpp-1030-
./af/gr/beos/gr_BeOSGraphics.cpp-1031-	// Note: most of the unix font handling code is in abi/src/af/xap/unix
./af/gr/beos/gr_BeOSGraphics.cpp-1032-	// Note: rather than in the graphics class.  i'm not sure this matters,
./af/gr/beos/gr_BeOSGraphics.cpp-1033-	// Note: but it is just different....
./af/gr/beos/gr_BeOSGraphics.cpp-1034-
./af/gr/beos/gr_BeOSGraphics.cpp:1035:	// TODO add code to map the given font name into one of the
./af/gr/beos/gr_BeOSGraphics.cpp:1036:	// TODO enums in GR_Font and set *pff and *pft.
./af/gr/beos/gr_BeOSGraphics.cpp-1037-
./af/gr/beos/gr_BeOSGraphics.cpp-1038-	*pff = FF_Unknown;
./af/gr/beos/gr_BeOSGraphics.cpp-1039-	*pfp = FP_Unknown;
./af/gr/beos/gr_BeOSGraphics.cpp-1040-	*pbTrueType = UT_TRUE;
./af/gr/beos/gr_BeOSGraphics.cpp-1041-}
./af/util/beos/ut_Xpm2Bitmap.cpp-98-			pRGB[k].blue = 219;
./af/util/beos/ut_Xpm2Bitmap.cpp-99-			pRGB[k].alpha = 255;//{255,255,255,255};//B_TRANSPARENT_32_BIT;
./af/util/beos/ut_Xpm2Bitmap.cpp-100-		}
./af/util/beos/ut_Xpm2Bitmap.cpp-101-		else
./af/util/beos/ut_Xpm2Bitmap.cpp-102-		{
./af/util/beos/ut_Xpm2Bitmap.cpp:103:			// TODO fix this to also handle 
./af/util/beos/ut_Xpm2Bitmap.cpp-104-			// #ffffeeeedddd type color references
./af/util/beos/ut_Xpm2Bitmap.cpp-105-			UT_ASSERT((bufColorValue[0] == '#') && strlen(bufColorValue)==7);
./af/util/beos/ut_Xpm2Bitmap.cpp-106-			UT_parseColor(bufColorValue, color);
./af/util/beos/ut_Xpm2Bitmap.cpp-107-			pRGB[k].red	= color.m_red;
./af/util/beos/ut_Xpm2Bitmap.cpp-108-			pRGB[k].green	= color.m_grn;
./af/xap/beos/be_GRDrawView.cpp-27-
./af/xap/beos/be_GRDrawView.cpp-28-void be_GRDrawView::Draw(BRect updateRect) {
./af/xap/beos/be_GRDrawView.cpp-29-	printf("GRDRAWVIEW: Draw request entered \n");
./af/xap/beos/be_GRDrawView.cpp-30-	if (m_pView) {
./af/xap/beos/be_GRDrawView.cpp-31-		printf("GRDRAWVIEW: Draw request actually requested \n");
./af/xap/beos/be_GRDrawView.cpp:32:		//TODO: Make the update more succinct with a rect
./af/xap/beos/be_GRDrawView.cpp-33-		BRect r = Bounds();
./af/xap/beos/be_GRDrawView.cpp-34-   		UT_Rect rect(r.left,r.top, r.Width(), r.Height());
./af/xap/beos/be_GRDrawView.cpp-35-		//m_pView->draw(&rect);
./af/xap/beos/be_GRDrawView.cpp-36-		m_pView->draw(NULL);
./af/xap/beos/be_GRDrawView.cpp-37-	}
./af/xap/beos/xap_BeOSApp.cpp-148-	
./af/xap/beos/xap_BeOSApp.cpp-149-	//For BeOS we use /boot/apps/AbiSuite (expect it to be installed there)
./af/xap/beos/xap_BeOSApp.cpp-150-	strcpy(buf, "/boot/apps/AbiSuite");
./af/xap/beos/xap_BeOSApp.cpp-151-
./af/xap/beos/xap_BeOSApp.cpp-152-#if 0
./af/xap/beos/xap_BeOSApp.cpp:153:	// TODO what to do ??  try the current directory...
./af/xap/beos/xap_BeOSApp.cpp-154-	UT_DEBUGMSG(("ABISUITE_HOME not set and -lib not given.  Assuming current directory...."));
./af/xap/beos/xap_BeOSApp.cpp-155-	getcwd(buf,sizeof(buf));
./af/xap/beos/xap_BeOSApp.cpp-156-	int len = strlen(buf);
./af/xap/beos/xap_BeOSApp.cpp-157-	if (buf[len-1]=='/')                            // trim trailing slash
./af/xap/beos/xap_BeOSApp.cpp-158-		buf[len-1] = 0;
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-263-
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-264-	  - Just quit, the data items will be ignored by the caller.
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-265-
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-266-	*/
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-267-
./af/xap/beos/xap_BeOSDlg_Zoom.cpp:268:	// TODO build the dialog, attach events, etc., etc.
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-269-	BMessage msg;
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-270-	ZoomWin  *newwin;
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-271-	if (RehydrateWindow("ZoomWindow", &msg)) {
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-272-                newwin = new ZoomWin(&msg);
./af/xap/beos/xap_BeOSDlg_Zoom.cpp-273-		newwin->SetDlg(this);
./af/xap/beos/xap_BeOSFrame.cpp-90-	m_pBeWin = NULL;
./af/xap/beos/xap_BeOSFrame.cpp-91-	m_pBeDocView = NULL;
./af/xap/beos/xap_BeOSFrame.cpp-92-	m_pBeOSPopup = NULL;
./af/xap/beos/xap_BeOSFrame.cpp-93-}
./af/xap/beos/xap_BeOSFrame.cpp-94-
./af/xap/beos/xap_BeOSFrame.cpp:95:// TODO when cloning a new frame from an existing one
./af/xap/beos/xap_BeOSFrame.cpp:96:// TODO should we also clone any frame-persistent
./af/xap/beos/xap_BeOSFrame.cpp:97:// TODO dialog data ??
./af/xap/beos/xap_BeOSFrame.cpp-98-
./af/xap/beos/xap_BeOSFrame.cpp-99-XAP_BeOSFrame::XAP_BeOSFrame(XAP_BeOSFrame * f)
./af/xap/beos/xap_BeOSFrame.cpp-100-	: XAP_Frame(static_cast<XAP_Frame *>(f)),
./af/xap/beos/xap_BeOSFrame.cpp-101-	  m_dialogFactory(this, static_cast<XAP_App *>(f->m_pBeOSApp))
./af/xap/beos/xap_BeOSFrame.cpp-102-{
./af/xap/beos/xap_BeOSFrame.cpp-438-
./af/xap/beos/xap_BeOSFrame.cpp-439-	//Only do this after we have resize the Graphics
./af/xap/beos/xap_BeOSFrame.cpp-440-	AV_View *pView = pBWin->m_pBeOSFrame->getCurrentView();
./af/xap/beos/xap_BeOSFrame.cpp-441-	if (pView) {
./af/xap/beos/xap_BeOSFrame.cpp-442-		pView->setWindowSize(rect.Width(), rect.Height());
./af/xap/beos/xap_BeOSFrame.cpp:443:		pView->draw(); //TODO do we need this???
./af/xap/beos/xap_BeOSFrame.cpp-444- 		/* Methinks it can handle itself*/
./af/xap/beos/xap_BeOSFrame.cpp-445-	}
./af/xap/beos/xap_BeOSFrame.cpp-446-//	pBWin->EnableUpdates();
./af/xap/beos/xap_BeOSFrame.cpp-447-	pBWin->Sync(); //Maybe Sync? We'll see
./af/xap/beos/xap_BeOSFrame.cpp-448-
./wp/ap/beos/ap_BeOSApp.cpp-39-
./wp/ap/beos/ap_BeOSApp.cpp-40-#include "fv_View.h"
./wp/ap/beos/ap_BeOSApp.cpp-41-#include "fp_Run.h"
./wp/ap/beos/ap_BeOSApp.cpp-42-
./wp/ap/beos/ap_BeOSApp.cpp-43-// HACK: set this symbol to 0 to turn off command-line conversion
./wp/ap/beos/ap_BeOSApp.cpp:44:// TODO: if it works, remove it entirely
./wp/ap/beos/ap_BeOSApp.cpp-45-#ifndef CONVERT
./wp/ap/beos/ap_BeOSApp.cpp-46-#define CONVERT 1	
./wp/ap/beos/ap_BeOSApp.cpp-47-#endif
./wp/ap/beos/ap_BeOSApp.cpp-48-
./wp/ap/beos/ap_BeOSApp.cpp-49-#if	CONVERT
./wp/ap/beos/ap_BeOSApp.cpp-482-		pImpText->pasteFromBuffer(pDocRange,pData,iLen);
./wp/ap/beos/ap_BeOSApp.cpp-483-		DELETEP(pImpText);
./wp/ap/beos/ap_BeOSApp.cpp-484-		goto MyEnd;
./wp/ap/beos/ap_BeOSApp.cpp-485-	}
./wp/ap/beos/ap_BeOSApp.cpp-486-
./wp/ap/beos/ap_BeOSApp.cpp:487:	// TODO figure out what to do with an image....
./wp/ap/beos/ap_BeOSApp.cpp:488:	UT_DEBUGMSG(("PasteFromClipboard: TODO support this format..."));
./wp/ap/beos/ap_BeOSApp.cpp-489-
./wp/ap/beos/ap_BeOSApp.cpp-490-MyEnd:
./wp/ap/beos/ap_BeOSApp.cpp-491-	return;
./wp/ap/beos/ap_BeOSApp.cpp-492-}
./wp/ap/beos/ap_BeOSApp.cpp-493-
./wp/ap/beos/ap_BeOSApp.cpp-541-	sigaction(SIGSEGV, &sa, NULL);
./wp/ap/beos/ap_BeOSApp.cpp-542-	sigaction(SIGBUS, &sa, NULL);
./wp/ap/beos/ap_BeOSApp.cpp-543-	sigaction(SIGILL, &sa, NULL);
./wp/ap/beos/ap_BeOSApp.cpp-544-	sigaction(SIGQUIT, &sa, NULL);
./wp/ap/beos/ap_BeOSApp.cpp-545-	sigaction(SIGFPE, &sa, NULL);
./wp/ap/beos/ap_BeOSApp.cpp:546:	// TODO: handle SIGABRT
./wp/ap/beos/ap_BeOSApp.cpp-547-
./wp/ap/beos/ap_BeOSApp.cpp-548-	// if the initialize fails, we don't have icons, fonts, etc.
./wp/ap/beos/ap_BeOSApp.cpp-549-	if (!pMyBeOSApp->initialize())
./wp/ap/beos/ap_BeOSApp.cpp-550-	{
./wp/ap/beos/ap_BeOSApp.cpp-551-		delete pMyBeOSApp;
./wp/ap/beos/ap_BeOSApp.cpp-594-void AP_BeOSApp::ParseCommandLine(void)
./wp/ap/beos/ap_BeOSApp.cpp-595-{
./wp/ap/beos/ap_BeOSApp.cpp-596-	// parse the command line
./wp/ap/beos/ap_BeOSApp.cpp-597-	// <app> [-script <scriptname>]* [-dumpstrings] [-lib <AbiSuiteLibDirectory>] [<documentname>]*
./wp/ap/beos/ap_BeOSApp.cpp-598-	
./wp/ap/beos/ap_BeOSApp.cpp:599:	// TODO when we refactor the App classes, consider moving
./wp/ap/beos/ap_BeOSApp.cpp:600:	// TODO this to app-specific, cross-platform.
./wp/ap/beos/ap_BeOSApp.cpp-601-
./wp/ap/beos/ap_BeOSApp.cpp:602:	// TODO replace this with getopt or something similar.
./wp/ap/beos/ap_BeOSApp.cpp-603-	
./wp/ap/beos/ap_BeOSApp.cpp-604-	// BeOS puts the program name in argv[0], so [1] is the first argument.
./wp/ap/beos/ap_BeOSApp.cpp-605-
./wp/ap/beos/ap_BeOSApp.cpp-606-	int nFirstArg = 1;
./wp/ap/beos/ap_BeOSApp.cpp-607-	int k;
./wp/ap/beos/ap_BeOSApp.cpp-655-			}
./wp/ap/beos/ap_BeOSApp.cpp-656-#endif
./wp/ap/beos/ap_BeOSApp.cpp-657-			else
./wp/ap/beos/ap_BeOSApp.cpp-658-			{
./wp/ap/beos/ap_BeOSApp.cpp-659-				UT_DEBUGMSG(("Unknown command line option [%s]\n",m_pArgs->m_argv[k]));
./wp/ap/beos/ap_BeOSApp.cpp:660:				// TODO don't know if it has a following argument or not -- assume not
./wp/ap/beos/ap_BeOSApp.cpp-661-			}
./wp/ap/beos/ap_BeOSApp.cpp-662-		}
./wp/ap/beos/ap_BeOSApp.cpp-663-		else
./wp/ap/beos/ap_BeOSApp.cpp-664-		{
./wp/ap/beos/ap_BeOSApp.cpp-665-			// [filename]
./wp/ap/beos/ap_BeOSApp.cpp-681-				{
./wp/ap/beos/ap_BeOSApp.cpp-682-					kWindowsOpened++;
./wp/ap/beos/ap_BeOSApp.cpp-683-				}
./wp/ap/beos/ap_BeOSApp.cpp-684-				else
./wp/ap/beos/ap_BeOSApp.cpp-685-				{
./wp/ap/beos/ap_BeOSApp.cpp:686:					// TODO: warn user that we couldn't open that file
./wp/ap/beos/ap_BeOSApp.cpp-687-
./wp/ap/beos/ap_BeOSApp.cpp-688-#if 1
./wp/ap/beos/ap_BeOSApp.cpp:689:					// TODO we crash if we just delete this without putting something
./wp/ap/beos/ap_BeOSApp.cpp:690:					// TODO in it, so let's go ahead and open an untitled document
./wp/ap/beos/ap_BeOSApp.cpp:691:					// TODO for now.  this would cause us to get 2 untitled documents
./wp/ap/beos/ap_BeOSApp.cpp:692:					// TODO if the user gave us 2 bogus pathnames....
./wp/ap/beos/ap_BeOSApp.cpp-693-					kWindowsOpened++;
./wp/ap/beos/ap_BeOSApp.cpp-694-					pFirstBeOSFrame->loadDocument(NULL, IEFT_Unknown);
./wp/ap/beos/ap_BeOSApp.cpp-695-#else
./wp/ap/beos/ap_BeOSApp.cpp-696-					delete pFirstBeOSFrame;
./wp/ap/beos/ap_BeOSApp.cpp-697-#endif
./wp/ap/beos/ap_BeOSDialog_Options.cpp-369-/*****************************************************************/
./wp/ap/beos/ap_BeOSDialog_Options.cpp-370-
./wp/ap/beos/ap_BeOSDialog_Options.cpp-371-// this function will allow multiple widget to tie into the same logic
./wp/ap/beos/ap_BeOSDialog_Options.cpp-372-// function (at the AP level) to enable/disable stuff
./wp/ap/beos/ap_BeOSDialog_Options.cpp-373-#if 0	
./wp/ap/beos/ap_BeOSDialog_Options.cpp:374:	// TODO: rewrite for win32
./wp/ap/beos/ap_BeOSDialog_Options.cpp-375-void s_checkbutton_toggle( GtkWidget *w, AP_BeOSDialog_Options *dlg )
./wp/ap/beos/ap_BeOSDialog_Options.cpp-376-{ 
./wp/ap/beos/ap_BeOSDialog_Options.cpp-377-	UT_ASSERT(dlg); 
./wp/ap/beos/ap_BeOSDialog_Options.cpp-378-	UT_ASSERT( w && GTK_IS_WIDGET(w));
./wp/ap/beos/ap_BeOSDialog_Options.cpp-379-	int i = (int) gtk_object_get_data( GTK_OBJECT(w), "tControl" );
./wp/ap/beos/ap_BeOSDialog_Options.cpp-505-		break;
./wp/ap/beos/ap_BeOSDialog_Options.cpp-506-	}
./wp/ap/beos/ap_BeOSDialog_Options.cpp-507-	
./wp/ap/beos/ap_BeOSDialog_Options.cpp-508-	newwin->Unlock();
./wp/ap/beos/ap_BeOSDialog_Options.cpp-509-	
./wp/ap/beos/ap_BeOSDialog_Options.cpp:510:	// TODO - change for win32
./wp/ap/beos/ap_BeOSDialog_Options.cpp-511-#if 0
./wp/ap/beos/ap_BeOSDialog_Options.cpp-512-	GtkWidget *w = _lookupWidget(id);
./wp/ap/beos/ap_BeOSDialog_Options.cpp-513-	UT_ASSERT( w && GTK_IS_WIDGET(w) );
./wp/ap/beos/ap_BeOSDialog_Options.cpp-514-	gtk_widget_set_sensitive( w, value );
./wp/ap/beos/ap_BeOSDialog_Options.cpp-515-#endif
./wp/ap/beos/ap_BeOSDialog_Options.cpp-516-}
./wp/ap/beos/ap_BeOSDialog_Options.cpp-517-
./wp/ap/beos/ap_BeOSDialog_Options.cpp-518-
./wp/ap/beos/ap_BeOSDialog_Options.cpp:519:// TODO - change for 
./wp/ap/beos/ap_BeOSDialog_Options.cpp-520-
./wp/ap/beos/ap_BeOSDialog_Options.cpp-521-/*
./wp/ap/beos/ap_BeOSDialog_Options.cpp-522-#define DEFINE_GET_SET_BOOL(button) \
./wp/ap/beos/ap_BeOSDialog_Options.cpp-523-UT_Bool     AP_BeOSDialog_Options::_gather##button(void) {				\
./wp/ap/beos/ap_BeOSDialog_Options.cpp-524-	UT_ASSERT(m_checkbutton##button && GTK_IS_BUTTON(m_checkbutton##button)); \
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-557-		//Take the information here ...
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-558-		newwin->Lock();
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-559-		newwin->Close();
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-560-    
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-561-	     }
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp:562:	// TODO build the dialog, attach events, etc., etc.
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-563-}
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-564-
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-565-void AP_BeOSDialog_Paragraph::_checkBoxChanged(class BCheckBox* pBox)
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-566-{
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-567-		
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-617-checkbox->SetValue(truth);
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-618-
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-619-void AP_BeOSDialog_Paragraph::_populateWindowData()
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-620-{
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-621-	// set the check boxes
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp:622:	// TODO : handle tri-state boxes !!!
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-623-	
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-624-	//Todo : Localize controls..
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-625-	ToggleCheckState( newwin->orphanControl , (_getCheckItemValue(id_CHECK_WIDOW_ORPHAN) == check_TRUE))
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-626-	ToggleCheckState( newwin->keepNext , (_getCheckItemValue(id_CHECK_KEEP_NEXT) == check_TRUE))
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-627-	ToggleCheckState( newwin->keepLines , (_getCheckItemValue(id_CHECK_KEEP_LINES) == check_TRUE))
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-778-		}
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-779-	}
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-780-
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-781-	newwin->Unlock();
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-782-	
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp:783:	// TODO: see the latest version of the Win32 implementation for ideas
./wp/ap/beos/ap_BeOSDialog_Paragraph.cpp-784-}
./wp/ap/beos/ap_BeOSFrame.cpp-126-	//
./wp/ap/beos/ap_BeOSFrame.cpp-127-	// Each Toolbar will also get a ViewListener so that
./wp/ap/beos/ap_BeOSFrame.cpp-128-	// it can update toggle buttons, and other state-indicating
./wp/ap/beos/ap_BeOSFrame.cpp-129-	// controls on it.
./wp/ap/beos/ap_BeOSFrame.cpp-130-	//
./wp/ap/beos/ap_BeOSFrame.cpp:131:	// TODO we ***really*** need to re-do the whole scrollbar thing.
./wp/ap/beos/ap_BeOSFrame.cpp:132:	// TODO we have an addScrollListener() using an m_pScrollObj
./wp/ap/beos/ap_BeOSFrame.cpp:133:	// TODO and a View-Listener, and a bunch of other widget stuff.
./wp/ap/beos/ap_BeOSFrame.cpp:134:	// TODO and its very confusing.
./wp/ap/beos/ap_BeOSFrame.cpp-135-	
./wp/ap/beos/ap_BeOSFrame.cpp-136-	pScrollObj = new AV_ScrollObj(this,_scrollFuncX,_scrollFuncY);
./wp/ap/beos/ap_BeOSFrame.cpp-137-	ENSUREP(pScrollObj);
./wp/ap/beos/ap_BeOSFrame.cpp-138-	pViewListener = new ap_ViewListener(this);
./wp/ap/beos/ap_BeOSFrame.cpp-139-	ENSUREP(pViewListener);
./wp/ap/beos/ap_BeOSFrame.cpp-148-		goto Cleanup;
./wp/ap/beos/ap_BeOSFrame.cpp-149-
./wp/ap/beos/ap_BeOSFrame.cpp-150-	nrToolbars = m_vecToolbarLayoutNames.getItemCount();
./wp/ap/beos/ap_BeOSFrame.cpp-151-	for (UT_uint32 k=0; k < nrToolbars; k++)
./wp/ap/beos/ap_BeOSFrame.cpp-152-	{
./wp/ap/beos/ap_BeOSFrame.cpp:153:		// TODO Toolbars are a frame-level item, but a view-listener is
./wp/ap/beos/ap_BeOSFrame.cpp:154:		// TODO a view-level item.  I've bound the toolbar-view-listeners
./wp/ap/beos/ap_BeOSFrame.cpp:155:		// TODO to the current view within this frame and have code in the
./wp/ap/beos/ap_BeOSFrame.cpp:156:		// TODO toolbar to allow the view-listener to be rebound to a different
./wp/ap/beos/ap_BeOSFrame.cpp:157:		// TODO view.  in the future, when we have support for multiple views
./wp/ap/beos/ap_BeOSFrame.cpp:158:		// TODO in the frame (think splitter windows), we will need to have
./wp/ap/beos/ap_BeOSFrame.cpp:159:		// TODO a loop like this to help change the focus when the current
./wp/ap/beos/ap_BeOSFrame.cpp:160:		// TODO view changes.
./wp/ap/beos/ap_BeOSFrame.cpp-161-		
./wp/ap/beos/ap_BeOSFrame.cpp-162-		EV_BeOSToolbar * pBeOSToolbar = (EV_BeOSToolbar *)m_vecToolbars.getNthItem(k);
./wp/ap/beos/ap_BeOSFrame.cpp-163-		pBeOSToolbar->bindListenerToView(pView);
./wp/ap/beos/ap_BeOSFrame.cpp-164-	}
./wp/ap/beos/ap_BeOSFrame.cpp-165-
./wp/ap/beos/ap_BeOSFrame.cpp-221-#if 1
./wp/ap/beos/ap_BeOSFrame.cpp-222-	/*
./wp/ap/beos/ap_BeOSFrame.cpp-223-	  UPDATE:  this code is back, but I'm leaving these comments as
./wp/ap/beos/ap_BeOSFrame.cpp-224-	  an audit trail.  See bug 99.  This only happens when loading
./wp/ap/beos/ap_BeOSFrame.cpp-225-	  a document into an empty window -- the case where a frame gets
./wp/ap/beos/ap_BeOSFrame.cpp:226:	  reused.  TODO consider putting an expose into ap_EditMethods.cpp
./wp/ap/beos/ap_BeOSFrame.cpp-227-	  instead of a draw() here.
./wp/ap/beos/ap_BeOSFrame.cpp-228-	*/
./wp/ap/beos/ap_BeOSFrame.cpp-229-	
./wp/ap/beos/ap_BeOSFrame.cpp-230-	/*
./wp/ap/beos/ap_BeOSFrame.cpp-231-	  I've removed this once again.  (Eric)  I replaced it with a call
./wp/ap/beos/ap_BeOSFrame.cpp-343-
./wp/ap/beos/ap_BeOSFrame.cpp-344-
./wp/ap/beos/ap_BeOSFrame.cpp-345-AP_BeOSFrame::AP_BeOSFrame(XAP_BeOSApp * app)
./wp/ap/beos/ap_BeOSFrame.cpp-346-	: XAP_BeOSFrame(app)
./wp/ap/beos/ap_BeOSFrame.cpp-347-{
./wp/ap/beos/ap_BeOSFrame.cpp:348:	// TODO
./wp/ap/beos/ap_BeOSFrame.cpp-349-}
./wp/ap/beos/ap_BeOSFrame.cpp-350-
./wp/ap/beos/ap_BeOSFrame.cpp-351-AP_BeOSFrame::AP_BeOSFrame(AP_BeOSFrame * f)
./wp/ap/beos/ap_BeOSFrame.cpp-352-	: XAP_BeOSFrame(static_cast<XAP_BeOSFrame *>(f))
./wp/ap/beos/ap_BeOSFrame.cpp-353-{
./wp/ap/beos/ap_BeOSFrame.cpp:354:	// TODO
./wp/ap/beos/ap_BeOSFrame.cpp-355-}
./wp/ap/beos/ap_BeOSFrame.cpp-356-
./wp/ap/beos/ap_BeOSFrame.cpp-357-AP_BeOSFrame::~AP_BeOSFrame()
./wp/ap/beos/ap_BeOSFrame.cpp-358-{
./wp/ap/beos/ap_BeOSFrame.cpp-359-	killFrameData();
./wp/ap/beos/ap_BeOSFrame.cpp-410-{
./wp/ap/beos/ap_BeOSFrame.cpp-411-	// are we replacing another document?
./wp/ap/beos/ap_BeOSFrame.cpp-412-	if (m_pDoc)
./wp/ap/beos/ap_BeOSFrame.cpp-413-	{
./wp/ap/beos/ap_BeOSFrame.cpp-414-		// yep.  first make sure it's OK to discard it, 
./wp/ap/beos/ap_BeOSFrame.cpp:415:		// TODO: query user if dirty...
./wp/ap/beos/ap_BeOSFrame.cpp-416-	}
./wp/ap/beos/ap_BeOSFrame.cpp-417-
./wp/ap/beos/ap_BeOSFrame.cpp-418-	// load a document into the current frame.
./wp/ap/beos/ap_BeOSFrame.cpp-419-	// if no filename, create a new document.
./wp/ap/beos/ap_BeOSFrame.cpp-420-
./wp/ap/beos/ap_BeOSPrefs.cpp-59-	return buf;
./wp/ap/beos/ap_BeOSPrefs.cpp-60-}
./wp/ap/beos/ap_BeOSPrefs.cpp-61-
./wp/ap/beos/ap_BeOSPrefs.cpp-62-void AP_BeOSPrefs::overlayEnvironmentPrefs(void)
./wp/ap/beos/ap_BeOSPrefs.cpp-63-{
./wp/ap/beos/ap_BeOSPrefs.cpp:64:	// TODO steal the appropriate code from the unix version
./wp/ap/beos/ap_BeOSPrefs.cpp:65:	// TODO after it is finished.
./wp/ap/beos/ap_BeOSPrefs.cpp-66-	if (!m_bUseEnvLocale)
./wp/ap/beos/ap_BeOSPrefs.cpp-67-		return;							// nothing to do...
./wp/ap/beos/ap_BeOSPrefs.cpp-68-
./wp/ap/beos/ap_BeOSPrefs.cpp-69-#if 1
./wp/ap/beos/ap_BeOSPrefs.cpp:70:	// TODO use various POSIX env variables
./wp/ap/beos/ap_BeOSPrefs.cpp:71:	// TODO (such as LANG and LC_*) to compute
./wp/ap/beos/ap_BeOSPrefs.cpp:72:	// TODO a name in our locale namespace
./wp/ap/beos/ap_BeOSPrefs.cpp:73:	// TODO (see .../src/wp/ap/xp/ap_*_Languages.h)
./wp/ap/beos/ap_BeOSPrefs.cpp-74-
./wp/ap/beos/ap_BeOSPrefs.cpp-75-        // make a copy of the current locale so we can set it back
./wp/ap/beos/ap_BeOSPrefs.cpp-76-	char *old_locale = UT_strdup(setlocale(LC_ALL, NULL));
./wp/ap/beos/ap_BeOSPrefs.cpp-77-
./wp/ap/beos/ap_BeOSPrefs.cpp-78-	// this will set our current locale information
./wp/ap/beos/ap_BeOSStatusBar.cpp-57-
./wp/ap/beos/ap_BeOSStatusBar.cpp-58-void StatusBarDrawView::FrameResized(float new_width, float new_height) {
./wp/ap/beos/ap_BeOSStatusBar.cpp-59-	//m_pAPStatusBar->setHeight((int)new_height);
./wp/ap/beos/ap_BeOSStatusBar.cpp-60-      m_pAPStatusBar->setWidth((int)new_width);
./wp/ap/beos/ap_BeOSStatusBar.cpp-61-
./wp/ap/beos/ap_BeOSStatusBar.cpp:62:	//TODO does this goes well?? umm.. we'll see later
./wp/ap/beos/ap_BeOSStatusBar.cpp-63-	BRect r;
./wp/ap/beos/ap_BeOSStatusBar.cpp-64-	if (new_width > m_fOldWidth)
./wp/ap/beos/ap_BeOSStatusBar.cpp-65-	{
./wp/ap/beos/ap_BeOSStatusBar.cpp-66-		r.left=m_fOldWidth-5;
./wp/ap/beos/ap_BeOSStatusBar.cpp-67-		r.right=new_width;
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-43-													 XAP_Toolbar_Id id)
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-44-	: EV_Toolbar_Control(pToolbar/*,id*/)
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-45-{
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-46-	UT_ASSERT(id==AP_TOOLBAR_ID_FMT_FONT);
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-47-
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp:48:	m_nPixels = 100;		// TODO: do a better calculation
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp:49:	m_nLimit = 32;			// TODO: honor this?  :)
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-50-}
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-51-
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-52-AP_BeOSToolbar_FontCombo::~AP_BeOSToolbar_FontCombo(void)
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-53-{
./wp/ap/beos/ap_BeOSToolbar_FontCombo.cpp-54-	// nothing to purge.  contents are static strings
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-35-													 XAP_Toolbar_Id id)
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-36-	: EV_Toolbar_Control(pToolbar/*,id*/)
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-37-{
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-38-	UT_ASSERT(id==AP_TOOLBAR_ID_FMT_SIZE);
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-39-
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp:40:	m_nPixels = 40;		// TODO: do a better calculation
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-41-	m_nLimit = 4;
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-42-}
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-43-
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-44-AP_BeOSToolbar_SizeCombo::~AP_BeOSToolbar_SizeCombo(void)
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-45-{
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-69-	m_vecContents.addItem((void *)"28");
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-70-	m_vecContents.addItem((void *)"36");
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-71-	m_vecContents.addItem((void *)"48");
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-72-	m_vecContents.addItem((void *)"72");
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-73-
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp:74:	// TODO: may want to populate this based on current font instead?
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-75-	return UT_TRUE;
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-76-}
./wp/ap/beos/ap_BeOSToolbar_SizeCombo.cpp-77-
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-36-													 XAP_Toolbar_Id id)
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-37-	: EV_Toolbar_Control(pToolbar/*,id*/)
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-38-{
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-39-	UT_ASSERT(id==AP_TOOLBAR_ID_FMT_STYLE);
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-40-
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp:41:	m_nPixels = 90;		// TODO: do a better calculation
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-42-	m_nLimit = 20;
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-43-}
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-44-
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-45-AP_BeOSToolbar_StyleCombo::~AP_BeOSToolbar_StyleCombo(void)
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-46-{
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-63-	m_vecContents.addItem((void *)"Heading 2");
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-64-	m_vecContents.addItem((void *)"Heading 3");
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-65-	m_vecContents.addItem((void *)"Plain Text");
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-66-	m_vecContents.addItem((void *)"Block Text");
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-67-#else
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp:68:	// TODO: need a view/doc pointer to get this right
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-69-	// ALSO: will need to repopulate as new styles added
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-70-	// HYP:  only call this method from shared code? 
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-71-	const char * szName;
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-72-	const PD_Style * pStyle;
./wp/ap/beos/ap_BeOSToolbar_StyleCombo.cpp-73-
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-35-													 XAP_Toolbar_Id id)
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-36-	: EV_Toolbar_Control(pToolbar/*,id*/)
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-37-{
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-38-	UT_ASSERT(id==AP_TOOLBAR_ID_ZOOM);
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-39-
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp:40:	m_nPixels = 60;		// TODO: do a better calculation
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-41-	m_nLimit = 6;
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-42-}
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-43-
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-44-AP_BeOSToolbar_ZoomCombo::~AP_BeOSToolbar_ZoomCombo(void)
./wp/ap/beos/ap_BeOSToolbar_ZoomCombo.cpp-45-{
./wp/ap/beos/ap_BeOSTopRuler.cpp-26-#include "gr_BeOSGraphics.h"
./wp/ap/beos/ap_BeOSTopRuler.cpp-27-
./wp/ap/beos/ap_BeOSTopRuler.cpp-28-#define ENSUREP(p)	do { UT_ASSERT(p); if (!p) goto Cleanup; } while (0)
./wp/ap/beos/ap_BeOSTopRuler.cpp-29-
./wp/ap/beos/ap_BeOSTopRuler.cpp-30-/*
./wp/ap/beos/ap_BeOSTopRuler.cpp:31: TODO: Take all of this generic ruler draw view stuff and put
./wp/ap/beos/ap_BeOSTopRuler.cpp-32- it in it's own class, rather than duplicating it!
./wp/ap/beos/ap_BeOSTopRuler.cpp-33-*/
./wp/ap/beos/ap_BeOSTopRuler.cpp-34-
./wp/ap/beos/ap_BeOSTopRuler.cpp-35-/*****************************************************************/
./wp/ap/beos/ap_BeOSTopRuler.cpp-36-class TopRulerDrawView: public be_GRDrawView {
./af/xap/beos/xap_BeOSFrame.h-96-		EV_BeOSMenu 		*m_pBeOSMenu;
./af/xap/beos/xap_BeOSFrame.h-97-		XAP_BeOSApp 		*m_pBeOSApp;
./af/xap/beos/xap_BeOSFrame.h-98-		XAP_BeOSFrame 		*m_pBeOSFrame;
./af/xap/beos/xap_BeOSFrame.h-99-		TFScrollBar		*m_hScroll, *m_vScroll;
./af/xap/beos/xap_BeOSFrame.h-100-		BRect			m_winRectAvailable;
./af/xap/beos/xap_BeOSFrame.h:101:		BView 			*m_pBeOSStatusBarView; //TODO: I don't like this!!!!!!!!!!!!!
./af/xap/beos/xap_BeOSFrame.h-102-};
./af/xap/beos/xap_BeOSFrame.h-103-
./af/xap/beos/xap_BeOSFrame.h-104-class be_Status;
./af/xap/beos/xap_BeOSFrame.h-105-
./af/xap/beos/xap_BeOSFrame.h-106-/*****************************************************************/
./af/xap/beos/xap_BeOSFrame.h-157-//	virtual GtkWidget *			_createDocumentWindow(void)=0;
./af/xap/beos/xap_BeOSFrame.h-158-	virtual void				_createTopLevelWindow(void);
./af/xap/beos/xap_BeOSFrame.h-159-
./af/xap/beos/xap_BeOSFrame.h-160-	virtual EV_Toolbar *		_newToolbar(XAP_App *app, XAP_Frame *frame, const char *, const char *);
./af/xap/beos/xap_BeOSFrame.h-161-
./af/xap/beos/xap_BeOSFrame.h:162:	// TODO see why ev_BeOSKeyboard has lowercase prefix...
./af/xap/beos/xap_BeOSFrame.h-163-	XAP_BeOSApp *				m_pBeOSApp;
./af/xap/beos/xap_BeOSFrame.h-164-	EV_BeOSMenu *				m_pBeOSMenu;
./af/xap/beos/xap_BeOSFrame.h-165-	EV_BeOSMenuPopup *			m_pBeOSPopup; /* only valid while a context popup is up */
./af/xap/beos/xap_BeOSFrame.h-166-	
./af/xap/beos/xap_BeOSFrame.h-167-	//Main window and  document view 
