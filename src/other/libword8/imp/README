This is just a start at a rough draft of the new library based upon 
MSWordView (abi/src/other/libmswordview is a good approximation). 
I'm in the process of restructuring and cleaning up the basic "utility"
functions necessary to read Word8 files. Everything here is just
preliminary and mostly drawn from MSWordView. Some of the code is verbatim
MSWordView.

The files that are in this directory should be straightforward 
conversions, however. Some already have been converted (more or less).
Degree of conversion should be stated in a comment above the function.

Here's what I'm doing:

First, try to move the code to using the structures found in word8.h
Not all of the necessary structs are there, nor are they in the correct
format yet. The basic idea is to roup everything logically and in a simple, 
easy to follow way.

Second, I'm trying to break the MSWordView code into more manageable chunks
and group similar functions together, just to make the code a little more
sane.

Third, anything which outputs HTML needs to be avoided for now. Those 
sections will have to be redone substantially to make this a generic
library.

Fourth, error() functions should be replaced with trace() whenever it's just
informational output. Keep error() when it's actually causing an error. 
Also, remove the erroroutput argument. These functions will be replaced 
later. There should be no fprintf's either. Either change it to an 
error/trace or if it's HTML output, skip the function for now.

Fifth, comment the source. Try to explain what's going on. This URL on the 
word8 format might help: 
http://toaster.sped.ukans.edu/~justin/word8/wword8.html

Sixth, I'm thinking about replacing the read and seek functions with
generic "stream" structs. Then we can modify it to use buffers rather
than temp files. It's not a big deal to mess with these yet.


If you want to help, or just for further information, contact me
(justin@ukans.edu). If you have patches to this code (and no cvs write 
access, send them to me).

Justin Bradford
justin@ukans.edu
